# Pour dÃ©clencher ce workflow : git tag v1.X.X && git push origin v1.X.X
# OU en une seule ligne : git tag v1.X.X && git push origin --tags
name: Release on tag

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build RGSX Release Package
        shell: bash
        run: |
          set -euo pipefail
          VERSION="${GITHUB_REF_NAME}"
          mkdir -p dist
          
          echo "Building RGSX package from ports/RGSX/ directoryâ€¦"
          cd ports/RGSX
          
          zip -r "../../dist/RGSX_update_latest.zip" . \
            -x "logs/*" \
               "logs/**" \
               "images/*" \
               "images/**" \
               "games/*" \
               "games/**" \
               "scripts/*" \
               "scripts/**" \
               "__pycache__/*" \
               "__pycache__/**" \
               "*.pyc" \
               "sources.json" \
               "*.log"
          
          cd ../..
          cp -f "dist/RGSX_update_latest.zip" "dist/RGSX_latest.zip" 
          
          echo "âœ“ RGSX package created successfully"
          
          echo ""
          echo "Building RGSX Full package (includes ports/ and windows/ directories)â€¦"
          zip -r "dist/RGSX_full_latest.zip" ports windows \
            -x "ports/RGSX/logs/*" \
               "ports/RGSX/logs/**" \
               "ports/RGSX/images/*" \
               "ports/RGSX/images/**" \
               "ports/RGSX/games/*" \
               "ports/RGSX/games/**" \
               "ports/RGSX/scripts/*" \
               "ports/RGSX/scripts/**" \
               "ports/RGSX/__pycache__/*" \
               "ports/RGSX/__pycache__/**" \
               "ports/RGSX/*.pyc" \
               "ports/RGSX/sources.json" \
               "ports/RGSX/*.log" \
               "windows/logs/*" \
               "windows/*.xml" \
               "ports/*.xml" \
               "*.xml" \
               "*.pyc" \
               "*.xml" \
               "*.log"
          
          
          echo "âœ“ All packages created successfully"
          ls -lh dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: RGSX ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: false
          body: |
            ## ðŸ“¦ RGSX Release ${{ github.ref_name }}
            
            ### ðŸ“¥ Manual Installation 
            
            #### Batocera/Knulli
            1. Download `RGSX_full_latest.zip`
            2. Extract only PORTS folder in `/userdata/roms/`
            3. Launch RGSX from the Ports menu
            
            #### Retrobat/Full Installation on Windows
            1. Download `RGSX_full_latest.zip`
            2. Extract all folders in your Retrobat\roms folder
            3. Launch RGSX from system "Windows"
            
            
            ### ðŸ“– Documentation
            []README.md](https://github.com/${{ github.repository }}/blob/main/README.md)
          files: |
            dist/RGSX_update_latest.zip
            dist/RGSX_full_latest.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
